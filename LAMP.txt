#ssh to your server:

ssh username@ipaddress

#if port other than 22:

ssh username@ipaddress -p portno

read mail in the server:

sudo mutt -f /var/spool/mail/root [path to mail]

#scp to other server;

scp path/to/file username@otherserver:path/to/save/

#if port other than 22

scp -P portno path/to/file username@otherserver:path/to/save/

#add cron in the server

crontab -e

#cron details for ref

http://team.macnn.com/drafts/crontab_defs.html

# use duplicity for backup

# rsync is awesome

# install package in centos

yum install packagename

# install image magick for resizing image

yum install ImageMagick

# zip a file

zip filename[or anything you want].zip filename

#zip a folder 

zip -r foldername.zip folder/

#start services in the server

service [servicename] start [you can restart, reload, stop, start]


#Benchmark server [ab]

ab -n 500 -c 150 http://211.25.199.168/InternetCables/testPage.html 

ab -n [totalrequest] -c [concurrencylevel] [[urltobenchmark]]

#documentaing

phpdoc -o HTML:frames:earthli -d live/  -t documentation/


# svn importing file from /tmp dir to original svn 

svn import /tmp/[[folder\ \name]] file:///var/www/[[path/to/the/folder[NOT to repo]] -m "Initial import"


# svn delete unwanted files (DELETING THIS WAY CAN DELETE FROM LOCAL AS WELL, CAREFULL!)

svn delete file:///var/www/html/svn.dev.integricity.com/repo/tags/ -m 'cleaning up'

# merging the branches

svn merge -r 39:HEAD trunk branches/maz

#SVN fucking issue
------------
#problem--
---------------
svn: Commit failed (details follow):
svn: Aborting commit: '/var/www/panasonic/branches' remains in tree-conflict
------------
#Solution--
------------
Force remove the conflicting file or folder and then accept the working copy

1. svn --force remove branches/
2. svn resolve --accept=working branches/

#svn book

http://svnbook.red-bean.com/en/1.6/svn-book.pdf



# benchmarking advice/suggestions

if you are benchmarking php pages, apache is way faster than nginx without fastCGI installed for nginx though.

To compare and  benchamrk for static pages create a html page and put the same content both the server to benchmark it. Result can be unbeleivable.

Use varnish to cache the content of the server so that it won't bother apache to serve static content.  Your settings can be similliar to the following.

Use apache to handle all the dynamic files which is php in my case. Use nginx and varnish to serve static content. How?
Install apache, nginx and varnish. Let nginx listen to port 80 or your main port. Apache and Varnish will listen to the same port which is not the port that nginx is listening to. In my case I asked nginx to listen to port 80 and apache to port 8080, same goes to varnish as well. Your nginx.conf file can be found here: 

Nginx configuration file: /etc/nginx/nginx.conf
apache configuration file: /etc/httpd/conf/httpd.conf
varnish configuration file: /etc/varnish/default.vcl

Settings for nginx:

##----------------------------------------
# start of nginx conf server block
##----------------------------------------

server {
        listen      80;
        server_name  [[yourservername]];

       location /phpmyadmin/ {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;

            # this next line adds the Host header so that apache knows which vHost to serve
            # the $host variable is automatically set to the hostname Nginx is responding to

            proxy_set_header Host $host;

            proxy_pass   http://127.0.0.1:8080;

        }

        location ~* \.(jpg|jpeg|gif|css|png|js|ico)$ {
            expires 1y;
            proxy_redirect off; # Do not redirect this proxy - It needs to be pass-through
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Server-Address $server_addr;
            proxy_pass_header Set-Cookie;
            proxy_pass http://127.0.0.1:6081;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:8080
        #
        location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;

            # this next line adds the Host header so that apache knows which vHost to serve
            # the $host variable is automatically set to the hostname Nginx is responding to

            proxy_set_header Host $host; 
            #This line is very impotant if you have mutiple domain or subdomains serving from same box
            proxy_pass   http://127.0.0.1:8080;
        }

    }

##--------------------------------
# end of nginx conf server block
#---------------------------------

Settings for apache virtual host;


##------------------------------------
# httpd.conf files settings
##------------------------------------

#Change the Listen port to 8080 [or whatever port you like, change it to accordingly]

Listen 8080

#change the name virtual host to listen to same port as above

NameVirtualHost *:8080

#create the virtual host

<VirtualHost *:8080>
     ServerAdmin [[emailForServerAdmin]]
     ServerName [[yourservername]]
     ServerAlias [[serveraliasname]]
     DocumentRoot [[document root]]
     ErrorLog [[errorlog]]
     CustomLog [[customlog]] combined
</VirtualHost>

##---------------------------------------
# End of httpd.conf configuration file
##---------------------------------------


Varnish configuration file:

##--------------------------------------
# start of varnish configuraton file
##--------------------------------------

#just change the port in the backend with your desired settings for varnish (how you want to cache, when you want to purge, when you don't want to cache etc)

backend default {
  .host = "localhost";
  .port = "8080"; # This need to be the same as the Apache vHost port listener!
}

##---------------------------------------
# end of varnish config file
##---------------------------------------


#use varnish for ssl using POUND


#most used browser in varnish
varnishtop -i RxHeader -I \^User-Agent

#most visited url
 varnishtop -i RxUrl


#referer

varnishtop -i RxHeader -I \^Referer


#tweaking varnish's startup settings

http://projects.linpro.no/pipermail/varnish-dev/2009-February/000968.html


#deleting root's mail
> /var/spool/mail/root



